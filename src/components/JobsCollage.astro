---
import SectionContainer from "./SectionContainer.astro"
import YoutubeVideo from "./YoutubeVideo.astro"
import Icon from "./ui/Icon.astro"
import Subtitle from "./Subtitle.astro"


const VIDEOS = [
  {
    videoId: "qWg4jPey4dA",
    thumbnailUrl: "/thumbnails/gorillabluet.webp",
    title: "GORILLA BLUE PRENDELO HAINY",
  },
  {
    videoId: "s24VHykyfyI",
    thumbnailUrl: "/thumbnails/hsession3.webp",
    title: "LA H SESSION 3 X TRIP N3A",
  },
  {
    videoId: "qKlqI5heUV0",
    thumbnailUrl: "/thumbnails/hockey.webp",
    title: "HOCKEY DANNY999",
  },
  {
    videoId: "veIhLNo4QOQ",
    thumbnailUrl: "/thumbnails/hacerlamia.webp",
    title: "HACER LA MIA DE MAXIISALAS, AND3R & CARABIN3",
  },
   {
    videoId: "5Aql62Q2q4Y",
    thumbnailUrl: "/thumbnails/beretta.webp",
    title: "BERETTA DE AND3R",
  },
  {
    videoId: "dN1OWAtXg5Q",
    thumbnailUrl: "/thumbnails/bbydime.webp",
    title: "BBY DIME DE AND3R & MAXIISALAS", 
  },
  {
    videoId: 'aIykDNkne5I',
    thumbnailUrl: "/thumbnails/pirana.webp",
    title: "PIRANA DE TRIP N3A & GUXXISOHO",
  },
  {
    videoId: "Gj6ixux53s0",
    thumbnailUrl: "/thumbnails/danny999.webp",
    title: "LA H SESSION",
  },
  {
    videoId: "ZXbbcTsAn18",
    thumbnailUrl: "/thumbnails/majonavideño.webp",
    title: "MAJO NAVIDEÑO DE BABYGLI$$Y",
  },
  {
    videoId: "B3ne2p8RmMU",
    thumbnailUrl: "/thumbnails/pikachuimg.webp",
    title: "PIKACHU DE GEEZYDEE & YOUNGFATTY",
  },
  {
    videoId: "IHSPeLrr2nc",
    thumbnailUrl: "/thumbnails/buscarte.webp",
    title: "BUSCARTE DE ALKHA & BABYGLI$$Y",
  },
  {
    videoId: "twFT0P3LNpo",
    thumbnailUrl: "/thumbnails/menosprecio.webp",
    title: "MENO$PRECI0 DE EL MERA",
  },
  {
    videoId: "Ey8fpVe3zFo",
    thumbnailUrl: "/thumbnails/rosadito.webp",
    title: "ROSADITA DE GUXXISOHO",
  },
  {
    videoId: "936gw_gq5Yk",
    thumbnailUrl: "/thumbnails/bi.webp",
    title: "BI DE RUBINI - GEEZYDEE & YOUNGFATTY",
  },
  {
    videoId: "wbXsZFWX2GE",
    thumbnailUrl: "/thumbnails/defjam.webp",
    title: "DEFJAM DE GEEZYDEE & TALES2R",
  },
  {
    videoId: "_rXS-Y-ybpQ",
    thumbnailUrl: "/thumbnails/pequeñita.webp",
    title: "PEQUEÑITA DE TALES2R & JAMBY EL FAVO",
  },
  {
    videoId: "CcZtYKrUbQc",
    thumbnailUrl: "/thumbnails/pyb.webp",
    title: "P&B DE BABYGLY$$Y & GUXXISOHO",
  },
  {
    videoId: "3oRiqNLx6kM",
    thumbnailUrl: "/thumbnails/swaggy.webp",
    title: "SWAGGY DE TRIP N3A",
  },
] as const
---

<SectionContainer class="px-0">
  <div class="flex items-center justify-between pb-6 md:pb-12">
    <Subtitle class="!pb-0">Echale un vistazo a todas mis creaciones.</Subtitle>

    <div class="hidden md:flex items-center gap-x-4">
      <button
        class="bg-[#E2E2E5] text-[#636365] opacity-45 p-1 rounded-full enabled:hover:scale-110 transition-all enabled:active:scale-100"
        id="left-button"
        disabled="true"
        aria-label="Ir al elemento anterior"
      >
        <Icon name="leftarrow" />
      </button>
      <button
        class="bg-[#E2E2E5] text-[#636365] p-1 rounded-full enabled:hover:scale-110 transition-all enabled:active:scale-100"
        id="right-button"
        
        aria-label="Ir al siguiente elemento"
      >
        <Icon name="rightarrow" />
      </button>
    </div>
  </div>

  <div
    class="relative carousel-container -mr-4 pr-4 md:mr-0 md:pr-0"
    id="carousel-container"
    style="--left-opacity: 0; --right-opacity: 1;"
  >
    <div
      class="flex overflow-scroll custom-scrollbar gap-x-4 md:gap-x-8 snap-mandatory snap-x -mr-4 pr-4 md:mr-0 md:pr-0"
      id="carousel"
    >
      {
        VIDEOS.map(({ videoId, thumbnailUrl, title }) => (
          <YoutubeVideo
            videoId={videoId}
            thumbnailUrl={thumbnailUrl}
            title={title}
          />
        ))
      }
    </div>
  </div>
</SectionContainer>

<style>
  .custom-scrollbar::-webkit-scrollbar {
    display: none;
  }

  .custom-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }

  .carousel-container:before {
    background-image: linear-gradient(to left, transparent, #fff);
    content: "";
    height: 570px;
    left: 0;
    opacity: var(--left-opacity);
    pointer-events: none;
    position: absolute;
    top: 0;
    transition: opacity cubic-bezier(0.4, 0, 0.2, 1) 150ms;
    width: 64px;
    z-index: 10;
  }

  .carousel-container:after {
    background-image: linear-gradient(to right, transparent, #fff);
    content: "";
    height: 570px;
    opacity: var(--right-opacity);
    pointer-events: none;
    position: absolute;
    right: 0;
    top: 0;
    transition: opacity cubic-bezier(0.4, 0, 0.2, 1) 150ms;
    width: 64px;
    z-index: 10;
  }

  @media (max-width: 768px) {
    .carousel-container:before {
      opacity: 0 !important;
    }

    .carousel-container:after {
      opacity: 0 !important;
    }
  }
</style>

<script>
  const rightButton = document.querySelector(
    "#right-button"
  ) as HTMLButtonElement
  const leftButton = document.querySelector("#left-button") as HTMLButtonElement
  const carousel = document.querySelector("#carousel") as HTMLDivElement
  const carouselContainer = document.querySelector(
    "#carousel-container"
  ) as HTMLDivElement

  leftButton.addEventListener("click", () => {
    carousel.scrollTo({
      left: carousel.scrollLeft - 320,
      behavior: "smooth",
    })
  })

  rightButton.addEventListener("click", () => {
    carousel.scrollTo({
      left: carousel.scrollLeft + 320,
      behavior: "smooth",
    })
  })

  carousel.addEventListener("scroll", () => {
    const tolerance = 2 // 0 + 2px to account for floating point errors

    const updateButtonState = (button: HTMLButtonElement, disable: boolean) => {
      button.classList.toggle("opacity-45", disable)
      button.disabled = disable
    }

    const updateOpacity = (property: string, value: string) => {
      carouselContainer.style.setProperty(property, value)
    }

    if (carousel.scrollLeft <= tolerance) {
      updateButtonState(leftButton, true)
    } else {
      updateButtonState(leftButton, false)
    }

    if (
      carousel.scrollLeft + carousel.clientWidth >=
      carousel.scrollWidth - tolerance
    ) {
      updateButtonState(rightButton, true)
      updateOpacity("--right-opacity", "0")
    } else {
      updateButtonState(rightButton, false)
      updateOpacity("--right-opacity", "1")
    }

    if (carousel.scrollLeft > tolerance) {
      updateOpacity("--left-opacity", "1")
    } else {
      updateOpacity("--left-opacity", "0")
    }
  })
</script>